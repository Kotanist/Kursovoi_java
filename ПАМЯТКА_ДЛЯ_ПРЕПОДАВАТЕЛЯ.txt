═══════════════════════════════════════════════════════════════════
    📚 BOOKSTORE MANAGEMENT SYSTEM - БЫСТРЫЙ СТАРТ
═══════════════════════════════════════════════════════════════════

ТРЕБОВАНИЯ:
  ✓ PostgreSQL установлен
  ✓ JDK 17+
  ✓ Maven

═══════════════════════════════════════════════════════════════════

⚡ АВТОМАТИЧЕСКАЯ УСТАНОВКА (рекомендуется):
═══════════════════════════════════════════════════════════════════

1. Запустите:
   > setup_for_demo.bat
   
2. Введите пароль PostgreSQL
   
3. Замените пароль в persistence.xml (строка 20)
   
4. Запустите:
   > mvn jetty:run
   
5. Откройте: http://localhost:8081
   Логин: admin / Пароль: admin123

═══════════════════════════════════════════════════════════════════

📝 РУЧНАЯ УСТАНОВКА (если автоматическая не работает):
═══════════════════════════════════════════════════════════════════

ШАГ 1: Создать БД и загрузить данные
-----------------------------------------------------------------------
PowerShell:
  $env:PGPASSWORD="ваш_пароль_postgresql"
  psql -U postgres -f database.sql

Результат: 
  ✓ База bookstore_utf8 создана
  ✓ 5 таблиц создано
  ✓ Тестовые данные загружены (5 книг, 4 покупателя, 3 продавца, 5 заказов)

ШАГ 2: Настроить подключение
-----------------------------------------------------------------------
Файл: src\main\resources\META-INF\persistence.xml
Строка 20:

БЫЛО:
  <property name="jakarta.persistence.jdbc.password" value="YOUR_PASSWORD_HERE"/>

СТАЛО:
  <property name="jakarta.persistence.jdbc.password" value="ваш_пароль"/>

⏱️ Время: 10 секунд

ШАГ 3: Запустить приложение
-----------------------------------------------------------------------
  mvn jetty:run

⏱️ Время: 1-2 минуты (первый запуск - скачает зависимости)

ШАГ 4: Открыть в браузере
-----------------------------------------------------------------------
  http://localhost:8081

ВХОД:
  Логин: admin
  Пароль: admin123

═══════════════════════════════════════════════════════════════════

🎯 ЧТО ДЕМОНСТРИРОВАТЬ:
═══════════════════════════════════════════════════════════════════

1. БЕЗОПАСНОСТЬ (5 мин):
   ✓ Страница входа
   ✓ Регистрация нового пользователя
   ✓ Вход как admin - все 4 модуля видны
   ✓ Вход как user - только модуль "Книги" (просмотр)
   ✓ У user нет кнопок редактирования

2. CRUD ОПЕРАЦИИ (5 мин):
   ✓ Добавить книгу
   ✓ Отредактировать книгу
   ✓ Удалить книгу
   ✓ Создать заказ (автоматический расчет суммы)

3. ТЕХНИЧЕСКИЕ ДЕТАЛИ (2 мин):
   ✓ MVC архитектура
   ✓ Hibernate ORM + PostgreSQL
   ✓ Связи по внешним ключам (Order → Book/Customer/Sale)
   ✓ BCrypt хеширование паролей
   ✓ 3 уровня безопасности (Filter → Controller → UI)
   ✓ Модульные и интеграционные тесты

═══════════════════════════════════════════════════════════════════

🆘 ПРОБЛЕМЫ И РЕШЕНИЯ:
═══════════════════════════════════════════════════════════════════

"Database not found":
  → Выполните database.sql ещё раз

"Authentication failed":
  → Проверьте пароль в persistence.xml (строка 20)

"Порт 8081 занят":
  → netstat -ano | findstr :8081
  → taskkill /F /PID <номер_процесса>

"Кириллица отображается неправильно":
  → Убедитесь что БД создана через database.sql (с UTF-8)

"Нет данных в таблицах":
  → Проверьте: psql -U postgres -d bookstore_utf8
  → SELECT COUNT(*) FROM book;
  → Если 0 - выполните database.sql

═══════════════════════════════════════════════════════════════════

📊 ИНФОРМАЦИЯ О ПРОЕКТЕ:
═══════════════════════════════════════════════════════════════════

Технологии:
  • Java 17
  • Jakarta EE 5.0
  • Hibernate 6.5.2
  • PostgreSQL (UTF-8)
  • BCrypt
  • JUnit 5 + Mockito
  • Maven 3.9+

Функционал:
  • 5 моделей данных (Book, Customer, Sale, Order, User)
  • Полный CRUD для всех моделей
  • 2 роли (ADMIN, USER)
  • Многоуровневая система безопасности
  • 15+ JSP страниц
  • 5+ тестовых классов

Код:
  • 30+ Java классов
  • ~4000 строк кода
  • Архитектура MVC
  • Принципы SOLID

═══════════════════════════════════════════════════════════════════

📞 КОНТАКТЫ:
═══════════════════════════════════════════════════════════════════

GitHub: https://github.com/Kotanist/Kursovoi_java

Документация:
  • README.md - полная документация
  • ДЛЯ_ДЕМОНСТРАЦИИ_ПРЕПОДАВАТЕЛЮ.md - подробная инструкция
  • ПОЯСНИТЕЛЬНАЯ_ЗАПИСКА.md - для Word документа

═══════════════════════════════════════════════════════════════════

Время полной настройки: 5-10 минут
Время демонстрации: 10-15 минут

УСПЕХОВ НА ЗАЩИТЕ! 🎓✨

═══════════════════════════════════════════════════════════════════ 